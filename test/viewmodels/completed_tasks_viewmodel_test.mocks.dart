// Mocks generated by Mockito 5.4.4 from annotations
// in kanban_board_innoscripta/test/viewmodels/completed_tasks_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:kanban_board_innoscripta/models/project_model.dart' as _i6;
import 'package:kanban_board_innoscripta/models/task_model.dart' as _i4;
import 'package:kanban_board_innoscripta/services/local_storage_service.dart'
    as _i2;
import 'package:kanban_board_innoscripta/services/projects_service.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i2.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  _i3.Future<void> addCompletedTask(_i4.TaskModel? task) => (super.noSuchMethod(
        Invocation.method(
          #addCompletedTask,
          [task],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<_i4.TaskModel> getCompletedTasks() => (super.noSuchMethod(
        Invocation.method(
          #getCompletedTasks,
          [],
        ),
        returnValue: <_i4.TaskModel>[],
      ) as List<_i4.TaskModel>);

  @override
  _i3.Future<void> saveTimerStartTime(String? timeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTimerStartTime,
          [timeString],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearCompletedTasks() => (super.noSuchMethod(
        Invocation.method(
          #clearCompletedTasks,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveTimerState(String? taskId) => (super.noSuchMethod(
        Invocation.method(
          #saveTimerState,
          [taskId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveTaskDuration(
    String? taskId,
    int? duration,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTaskDuration,
          [
            taskId,
            duration,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> getTaskDuration(String? taskId) => (super.noSuchMethod(
        Invocation.method(
          #getTaskDuration,
          [taskId],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}

/// A class which mocks [ProjectsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProjectsService extends _i1.Mock implements _i5.ProjectsService {
  MockProjectsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i6.ProjectModel> get projects => (super.noSuchMethod(
        Invocation.getter(#projects),
        returnValue: <_i6.ProjectModel>[],
      ) as List<_i6.ProjectModel>);

  @override
  set projects(List<_i6.ProjectModel>? _projects) => super.noSuchMethod(
        Invocation.setter(
          #projects,
          _projects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set selectedProject(_i6.ProjectModel? _selectedProject) => super.noSuchMethod(
        Invocation.setter(
          #selectedProject,
          _selectedProject,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deleteProject(String? projectId) => super.noSuchMethod(
        Invocation.method(
          #deleteProject,
          [projectId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleFavorite(String? projectId) => super.noSuchMethod(
        Invocation.method(
          #toggleFavorite,
          [projectId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateProject(_i6.ProjectModel? updatedProject) => super.noSuchMethod(
        Invocation.method(
          #updateProject,
          [updatedProject],
        ),
        returnValueForMissingStub: null,
      );
}
