// Mocks generated by Mockito 5.4.4 from annotations
// in kanban_board_innoscripta/test/timer/timer_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:kanban_board_innoscripta/models/task_model.dart' as _i3;
import 'package:kanban_board_innoscripta/services/timer/timer_manager.dart'
    as _i2;
import 'package:kanban_board_innoscripta/services/timer/timer_storage_service.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ITimerManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockITimerManager extends _i1.Mock implements _i2.ITimerManager {
  MockITimerManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get currentDuration => (super.noSuchMethod(
        Invocation.getter(#currentDuration),
        returnValue: 0,
      ) as int);

  @override
  void startTimer(
    _i3.TaskModel? task, {
    required Function? onTick,
    required Function? onStart,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #startTimer,
          [task],
          {
            #onTick: onTick,
            #onStart: onStart,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopTimer(
          {required dynamic Function(
            String?,
            int,
          )? onStop}) =>
      super.noSuchMethod(
        Invocation.method(
          #stopTimer,
          [],
          {#onStop: onStop},
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isTimerRunning(String? taskId) => (super.noSuchMethod(
        Invocation.method(
          #isTimerRunning,
          [taskId],
        ),
        returnValue: false,
      ) as bool);

  @override
  String getFormattedDuration(int? seconds) => (super.noSuchMethod(
        Invocation.method(
          #getFormattedDuration,
          [seconds],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getFormattedDuration,
            [seconds],
          ),
        ),
      ) as String);

  @override
  void restoreTimer(
    String? taskId,
    int? duration,
    DateTime? startTime,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #restoreTimer,
          [
            taskId,
            duration,
            startTime,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ITimerStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockITimerStorageService extends _i1.Mock
    implements _i5.ITimerStorageService {
  MockITimerStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String?> getRunningTaskId() => (super.noSuchMethod(
        Invocation.method(
          #getRunningTaskId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> saveTimerState(String? taskId) => (super.noSuchMethod(
        Invocation.method(
          #saveTimerState,
          [taskId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getTimerStartTime() => (super.noSuchMethod(
        Invocation.method(
          #getTimerStartTime,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> saveTimerStartTime(String? timeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTimerStartTime,
          [timeString],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> getTaskDuration(String? taskId) => (super.noSuchMethod(
        Invocation.method(
          #getTaskDuration,
          [taskId],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<void> saveTaskDuration(
    String? taskId,
    int? duration,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTaskDuration,
          [
            taskId,
            duration,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
